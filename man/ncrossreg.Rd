% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ncrossreg.R
\name{ncrossreg}
\alias{ncrossreg}
\title{Cross-validation of ACMTF-R by jack-knifing}
\usage{
ncrossreg(
  Z,
  Y,
  maxNumComponents = 5,
  alpha = 1,
  beta = rep(0.001, length(Z$object)),
  epsilon = 1e-08,
  pi = 0.5,
  cg_update = "HS",
  line_search = "MT",
  max_iter = 10000,
  max_fn = 10000,
  abs_tol = 1e-10,
  rel_tol = 1e-10,
  grad_tol = 1e-10,
  nstart = 5,
  numCores = 1
)
}
\arguments{
\item{Z}{Combined dataset and mode object as produced by \code{\link[=setupCMTFdata]{setupCMTFdata()}}.}

\item{Y}{Dependent variable (regression part).}

\item{maxNumComponents}{Maximum number of components to investigate (default 5).}

\item{alpha}{Scalar penalizing the components to be norm 1 (default 1).}

\item{beta}{Vector of penalty values for each dataset, penalizing the lambda terms (default 1e-3).}

\item{epsilon}{Scalar value to make it possible to compute the partial derivatives of lambda (default 1e-8).}

\item{pi}{Pi value of the loss function as specified by Van der Ploeg et al., 2025.}

\item{cg_update}{Update method for the conjugate gradient algorithm, see \code{\link[mize:mize]{mize::mize()}} for the options (default="HS", Hestenes-Steifel).}

\item{line_search}{Line search algorithm to use, see \code{\link[mize:mize]{mize::mize()}} for the options (default="MT", More-Thuente).}

\item{max_iter}{Maximum number of iterations.}

\item{max_fn}{Maximum number of function evaluations.}

\item{abs_tol}{Function tolerance criterion for convergence.}

\item{rel_tol}{Relative function tolerance criterion for convergence.}

\item{grad_tol}{Absolute tolerence for the l2-norm of the gradient vector.}

\item{nstart}{Number of randomly initialized models to create per number of components (default 1).}

\item{numCores}{Number of cores to use (default 1). Setting this to higher than 1 will make the algorithm run in parallel.}
}
\value{
A plot showcasing the variance explained in the X blocks and Y as well as the RMSE of Y.
}
\description{
Cross-validation of ACMTF-R by jack-knifing
}
\examples{
set.seed(123)
A = array(rnorm(25*2), c(25, 2))
B = array(rnorm(100*2), c(100, 2))
C = array(rnorm(10*2), c(10, 2))
D = array(rnorm(100*2), c(100, 2))
E = array(rnorm(10*2), c(10, 2))

df1 = reinflateTensor(A, B, C)
df2 = reinflateTensor(A, D, E)
datasets = list(df1, df2)
modes = list(c(1,2,3), c(1,4,5))
Z = setupCMTFdata(datasets, modes)
Y = matrix(A[,1])

# Uses poor settings to make the example work.
plot = ncrossreg(Z, Y, maxNumComponents=2, max_iter=2, nstart=2)
}
