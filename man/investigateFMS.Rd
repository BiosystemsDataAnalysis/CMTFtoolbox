% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/investigateFMS.R
\name{investigateFMS}
\alias{investigateFMS}
\title{Factor Match Score (FMS) for model selection}
\usage{
investigateFMS(
  datasets,
  modes,
  sharedMode,
  model = "acmtf",
  minNumComponents = 1,
  maxNumComponents = 3,
  numFolds = 10,
  jackKnife = FALSE,
  numCores = 1,
  max_iter = 10000,
  max_fn = 1e+05,
  rel_tol = 1e-08,
  abs_tol = 1e-08
)
}
\arguments{
\item{datasets}{List of arrays of datasets. Multi-way and two-way may be combined.}

\item{modes}{Numbered modes per dataset in a list. Example element 1: 1 2 3 and element 2: 1 4 for the X tensor and Y matrix case with a shared subject mode.}

\item{sharedMode}{Mode that is shared between all blocks, used to remove fibers for numFolds randomly initialized models.}

\item{model}{Model type to run, either "acmtf" or "cmtf" (default "acmtf").}

\item{minNumComponents}{Minimum number of components to check (default 1).}

\item{maxNumComponents}{Maximum number of components to check (default 3).}

\item{numFolds}{Number of randomly initialized models to create (default 10).}

\item{jackKnife}{Jack-knife samples instead of removing multiple samples per fold (default FALSE).}

\item{numCores}{Number of cores to use (default 1). A number higher than 1 will run the process in parallel.}

\item{max_iter}{Maximum number of iterations.}

\item{max_fn}{Maximum number of function evaluations.}

\item{rel_tol}{Relative function tolerance criterion for convergence.}

\item{abs_tol}{Function tolerance criterion for convergence.}
}
\value{
List containing "FMS" with the resulting pairwise comparisons of all models per number of components and "plot" with an overview plot.
}
\description{
Factor Match Score (FMS) for model selection
}
\examples{
set.seed(123)
A = array(rnorm(108*2), c(108, 2))
B = array(rnorm(100*2), c(100, 2))
C = array(rnorm(10*2), c(10, 2))
D = array(rnorm(100*2), c(100,2))
E = array(rnorm(10*2), c(10,2))

df1 = reinflateTensor(A, B, C)
df2 = reinflateTensor(A, D, E)
datasets = list(df1, df2)
modes = list(c(1,2,3), c(1,4,5))

# specific setting to reduce runtime for CRAN
result = investigateFMS(datasets, modes, 1, model="acmtf", numFolds=2, rel_tol=1e-4, abs_tol=1e-4)
}
