% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/acmtf_opt.R
\name{acmtf_opt}
\alias{acmtf_opt}
\title{Advanced coupled matrix and tensor factorizations}
\usage{
acmtf_opt(
  Z,
  numComponents,
  initialization = "random",
  alpha = 1,
  beta = rep(0.001, length(Z$object)),
  epsilon = 1e-08,
  maxit = 2500,
  tol = 1e-06,
  nstart = 1,
  numCores = 1
)
}
\arguments{
\item{Z}{Combined dataset and mode object as produced by \code{\link[=setupCMTFdata]{setupCMTFdata()}}.}

\item{numComponents}{Number of components}

\item{initialization}{Initialization, either "random" (default) or "nvec" for numComponents components of the concatenated data using svd.}

\item{alpha}{Scalar penalizing the components to be norm 1 (default 1).}

\item{beta}{Vector of penalty values for each dataset, penalizing the lambda terms (default 1e-3).}

\item{epsilon}{Scalar value to make it possible to compute the partial derivatives of lambda (default 1e-8).}

\item{maxit}{Maximum number of iterations (default 2500, see also \code{\link[optimx:Rcgmin]{optimx::Rcgmin()}}).}

\item{tol}{Tolerance for testing the size of the square of the gradient (default 1e-6, see also \code{\link[optimx:Rcgmin]{optimx::Rcgmin()}}).}

\item{nstart}{Number of models to produce (default 1). If set higher than one, the package will return the best fitted model.}

\item{numCores}{Number of cores to use (default 1). If set higher than one, the package will attempt to run in parallel.}
}
\value{
output, see \code{\link[optimx:Rcgmin]{optimx::Rcgmin()}}
}
\description{
Advanced coupled matrix and tensor factorizations
}
\examples{
I = 108
J = 100
K = 10
df = array(rnorm(I*J*K), c(I,J,K))
datasets = list(df, df)
modes = list(c(1,2,3), c(1,4,5))
Z = setupCMTFdata(datasets, modes)
model = acmtf_opt(Z, 1)
}
